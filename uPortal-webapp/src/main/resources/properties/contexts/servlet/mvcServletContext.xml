<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to Apereo under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Apereo licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License.  You may obtain a
    copy of the License at the following location:

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
           http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <!-- Enable annotation-based Spring Security permission evaluation -->
    <security:global-method-security pre-post-annotations="enabled">
        <security:expression-handler ref="expressionHandler" />
    </security:global-method-security>
    <bean id="expressionHandler"
        class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
        <property name="permissionEvaluator">
            <bean class="org.apereo.portal.spring.security.evaluator.PortalPermissionEvaluator"/>
        </property>
    </bean>

	<!--
	 | rest controllers require useDefaultSuffixPattern set to false
	 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
  		<property name="useDefaultSuffixPattern" value="false"/>
	</bean>
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>

    <!--
     | This bean is needed for the EntitiesRESTController to convert JsonEntityBean objects into
     | JSON.  It is not compatible with Portlet MVC types in recent versions of the Spring
     | Framework, so it needs to be defined here (rather than the main application context).  There
     | seem to be, moreover, multiple ways in uPortal to convert Java objects to JSON.  We should
     | probably identify the best/most contemporary and consolidate on that approach.
     +-->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="order" value="0"/>
        <property name="defaultViews">
            <list>
                <bean
                        class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
                <bean class="org.springframework.web.servlet.view.xml.MarshallingView">
                    <constructor-arg>
                        <bean class="org.springframework.oxm.xstream.XStreamMarshaller" />
                    </constructor-arg>
                </bean>
            </list>
        </property>
        <property name="contentNegotiationManager">
            <bean class="org.springframework.web.accept.ContentNegotiationManager">
                <constructor-arg>
                    <bean class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
                        <constructor-arg>
                            <map>
                                <entry key="json" value="application/json"/>
                            </map>
                        </constructor-arg>
                    </bean>
                </constructor-arg>
            </bean>
        </property>
    </bean>

    <!-- even though context:component-scan is defined in applicationContext, we need an additional reference
    for this context as it's unique to the DispatcherServlet -->
    <context:component-scan base-package="org.apereo.portal.layout.dlm.remoting"/>
    <context:component-scan base-package="org.apereo.portal.portlets.permissionsadmin"/>
    <context:component-scan base-package="org.apereo.portal.security.remoting"/>
    <context:component-scan base-package="org.apereo.portal.rest"/>
    <context:property-placeholder location="classpath:/properties/portal.properties"/>

</beans>
